apiVersion: apps/v1
kind: Deployment
metadata:
  name: dys-deployment
spec:
  # 안정성을 위해 동일한 앱을 2개 실행시킵니다.
  replicas: 2
  selector:
    matchLabels:
      app: dys-backend
  template:
    metadata:
      labels:
        # 이 라벨(app: my-backend)을 보고 service.yaml이 찾아옵니다.
        app: dys-backend
    spec:
      containers:
      - name: dys-backend-container
        # 💡 중요: CI/CD 파이프라인에서 빌드한 본인의 이미지 주소를 넣어야 합니다.
        image: asia-northeast3-docker.pkg.dev/deyeonso10/dys-backend/dys-backend:e11e71b723f5ef5ba652260c92f57c6f12acdb26
        ports:
        - containerPort: 8000 # 메인 서버 포트
        - containerPort: 8001 # WebSocket 서버 포트
        env:
        - name: MONGODB_URI
          value: "mongodb+srv://dys-chatbot:epdusth@cluster0.drwwbhn.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
        - name: DATABASE_NAME
          value: "dys-chatbot"
        - name: ALLOWED_ORIGINS
          value: "*"
        - name: PORT
          value: "8000"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: openai-api-key
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-anon-key