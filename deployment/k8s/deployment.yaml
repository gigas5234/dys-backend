apiVersion: apps/v1
kind: Deployment
metadata:
  name: dys-deployment
spec:
  # 안정성을 위해 동일한 앱을 2개 실행시킵니다.
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: dys-backend
  template:
    metadata:
      labels:
        # 이 라벨(app: my-backend)을 보고 service.yaml이 찾아옵니다.
        app: dys-backend
    spec:
      containers:
      - name: dys-backend-container
        # 💡 중요: CI/CD 파이프라인에서 빌드한 본인의 이미지 주소를 넣어야 합니다.
        image: asia-northeast3-docker.pkg.dev/deyeonso10/dys-backend/dys-backend:latest
        ports:
        - containerPort: 8000 # 메인 서버 포트
        - containerPort: 8001 # WebSocket 서버 포트
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 15
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 90
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
        env:
        - name: MONGODB_URI
          value: "mongodb+srv://dys-chatbot:epdusth@cluster0.drwwbhn.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
        - name: DATABASE_NAME
          value: "dys-chatbot"
        - name: ALLOWED_ORIGINS
          value: "*"
        - name: PORT
          value: "8000"
        - name: WEBSOCKET_HOST
          value: "34.64.136.237"  # GKE 외부 IP
        - name: WEBSOCKET_PORT
          value: "8001"
        - name: CORS_ORIGINS
          value: "*,https://dys-phi.vercel.app,https://localhost:3000"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: openai-api-key
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-anon-key