apiVersion: apps/v1
kind: Deployment
metadata:
  name: dys-deployment
  annotations:
    autopilot.gke.io/disable-pod-autoscaling: "true"
spec:
  # 안정성을 위해 동일한 앱을 1개 실행시킵니다.
  replicas: 1
  strategy:
    type: Recreate
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: dys-backend
  template:
    metadata:
      labels:
        # 이 라벨(app: my-backend)을 보고 service.yaml이 찾아옵니다.
        app: dys-backend
    spec:
      # Autopilot 클러스터에 최적화된 설정
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"
      containers:
      - name: dys-backend-container
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        # 💡 중요: CI/CD 파이프라인에서 빌드한 본인의 이미지 주소를 넣어야 합니다.
        image: asia-northeast3-docker.pkg.dev/deyeonso10/dys-backend/dys-backend:8934c9ea2c3158d43ac4419960f82568ece03b00
        ports:
        - containerPort: 8000 # 메인 서버 포트
        - containerPort: 8001 # WebSocket 서버 포트
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        # 헬스체크 설정 - 서버 시작 시간 고려
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60  # 서버 시작 대기
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 45  # 서버 시작 대기
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: mongodb-uri
        - name: DATABASE_NAME
          value: "dys-chatbot"
        - name: ALLOWED_ORIGINS
          value: "*"
        - name: PORT
          value: "8000"
        - name: WEBSOCKET_HOST
          value: "34.64.136.237"  # GKE 외부 IP
        - name: WEBSOCKET_PORT
          value: "8001"
        - name: CORS_ORIGINS
          value: "*,https://dys-phi.vercel.app,https://localhost:3000"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: openai-api-key
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: supabase-anon-key
        - name: PINECONE_API_KEY
          valueFrom:
            secretKeyRef:
              name: dys-secrets
              key: pinecone-api-key
        - name: PINECONE_ENVIRONMENT
          value: "gcp-starter"
        - name: PINECONE_HOST
          value: "https://deyeonso-if637zn.svc.aped-4627-b74a.pinecone.io"
        - name: TRANSFORMERS_CACHE
          value: "/tmp/huggingface_cache"
        # matplotlib 및 권한 문제 해결 환경변수
        - name: MPLCONFIGDIR
          value: "/tmp/matplotlib_cache"
        - name: XDG_CACHE_HOME
          value: "/tmp/app_cache"
        - name: HOME
          value: "/tmp/app_cache"
        # 로깅 관련 환경변수
        - name: LOG_LEVEL
          value: "INFO"
        # 프록시 관련 환경변수 완전 제거 (모든 외부 API 안정성 확보)
        - name: HTTP_PROXY
          value: ""
        - name: HTTPS_PROXY  
          value: ""
        - name: NO_PROXY
          value: "*"
        - name: http_proxy
          value: ""
        - name: https_proxy
          value: ""
        - name: no_proxy
          value: "*"
        - name: ALL_PROXY
          value: ""
        - name: all_proxy
          value: ""
        - name: REQUESTS_CA_BUNDLE
          value: ""
        - name: CURL_CA_BUNDLE
          value: ""