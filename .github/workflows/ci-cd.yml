name: Backend CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build-and-push-to-gcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev --quiet
        
      - name: Debug Build Environment
        run: |
          echo "=== Build Environment Info ==="
          echo "Available disk space:"
          df -h
          echo "Available memory:"
          free -h
          echo "Docker version:"
          docker version
          echo "Docker info:"
          docker info

      - name: Build Docker Image
        run: |
          docker build \
            --progress=plain \
            --no-cache \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }} \
            .
        timeout-minutes: 30

      - name: Push Docker Image
        run: |
          docker push asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }}
        timeout-minutes: 15

  deploy-to-gke:
    needs: build-and-push-to-gcr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install GKE auth plugin (apt)
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli-gke-gcloud-auth-plugin

      - name: Install kubectl
        run: |
          KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Enable GKE auth plugin
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials dys-cluster --region asia-northeast3

      - name: Deploy with Recreate strategy
        run: |
          set -e
          echo "Deploying with Recreate strategy..."
          kubectl set image deployment/dys-deployment dys-backend-container=asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }}
          
      - name: Wait for rollout (extended)
        run: |
          kubectl rollout status deployment/dys-deployment --timeout=600s

      - name: Debug on failure
        if: ${{ always() }}
        run: |
          echo "=== Deploy ==="
          kubectl get deploy dys-deployment -o wide
          echo "=== ReplicaSets ==="
          kubectl get rs -l app=dys-backend -o wide || true
          echo "=== Pods ==="
          kubectl get pods -l app=dys-backend -o wide || true
          echo "=== Events ==="
          kubectl get events --sort-by=.lastTimestamp | tail -n 100 || true

          POD=$(kubectl get pods -l app=dys-backend --no-headers | awk '$3!="Running"{print $1; exit}')
          if [ -n "$POD" ]; then
            echo "=== Describe $POD ==="
            kubectl describe pod "$POD" || true
            echo "=== Logs $POD ==="
            kubectl logs "$POD" -c dys-backend-container --tail=200 || true
            kubectl logs "$POD" -c dys-backend-container --previous --tail=200 || true
          fi
          
          echo "=== Build Debug Info ==="
          echo "Docker version:"
          docker version || true
          echo "Docker info:"
          docker info || true
          echo "Available disk space:"
          df -h || true
          echo "Available memory:"
          free -h || true
