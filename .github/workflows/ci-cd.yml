name: Backend CI/CD

# main 브랜치에 push될 때마다 실행
on:
  push:
    branches: [ "main" ]

jobs:
  # 1. 빌드 및 이미지 푸시 작업 (기존과 동일)
  build-and-push-to-gcr:
    runs-on: ubuntu-latest
    steps:
    # 1. GitHub에 올라간 코드를 작업 공간으로 가져오기
    - name: Checkout
      uses: actions/checkout@v3

    # 2. GitHub Secrets에 저장된 키를 이용해 Google Cloud에 로그인
    - name: Google Cloud Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # 3. Docker가 Artifact Registry에 접속할 수 있도록 인증 설정
    - name: Set up Cloud SDK and Docker
      uses: 'google-github-actions/setup-gcloud@v1'
    - name: Configure Docker
      run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

    # 4. Dockerfile을 이용해 이미지 빌드
    # 저장소 이름과 이미지 이름을 'dys-backend'로 통일했습니다.
    - name: Build Docker Image
      run: |
        docker build -t asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }} .

    # 5. 빌드된 이미지를 Artifact Registry로 Push
    # 위와 동일하게 이미지 이름을 맞춰줍니다.
    - name: Push Docker Image to Artifact Registry
      run: |
        docker push asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }}

  # 6. GKE에 배포하는 작업 
  deploy-to-gke:
    # 'build-and-push-to-gcr' 작업이 성공해야만 실행됩니다.
    needs: build-and-push-to-gcr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Google Cloud Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # 7. GKE 인증 플러그인 설치 및 kubectl 설정
    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        echo "use-gcp-auth-plugin: true" >> ~/.kube/config

    # 8. kubectl이 GKE 클러스터에 접속하도록 인증 정보를 가져옵니다.
    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials dys-cluster --region asia-northeast3

    # 9. deployment.yaml 파일의 이미지 태그를 방금 빌드한 태그로 자동 교체합니다.
    - name: Update Image Tag in Deployment
      run: |
        sed -i "s|image:.*|image: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/dys-backend/dys-backend:${{ github.sha }}|g" deployment.yaml

    # 10. 수정된 deployment.yaml 파일로 GKE에 배포합니다.
    - name: Deploy to GKE
      run: |
        kubectl apply -f deployment.yaml --validate=false
